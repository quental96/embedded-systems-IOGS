

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Feb 26 13:13:16 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1503 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010E                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  018E                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0197                     	;# 
   114  020C                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0391                     	;# 
   131  0392                     	;# 
   132  0393                     	;# 
   133  0498                     	;# 
   134  0498                     	;# 
   135  0499                     	;# 
   136  049A                     	;# 
   137  049B                     	;# 
   138  049B                     	;# 
   139  049C                     	;# 
   140  049D                     	;# 
   141  049E                     	;# 
   142  049F                     	;# 
   143  0611                     	;# 
   144  0612                     	;# 
   145  0613                     	;# 
   146  0613                     	;# 
   147  0614                     	;# 
   148  0615                     	;# 
   149  0616                     	;# 
   150  0616                     	;# 
   151  0617                     	;# 
   152  0618                     	;# 
   153  0619                     	;# 
   154  0619                     	;# 
   155  061A                     	;# 
   156  061B                     	;# 
   157  061C                     	;# 
   158  061C                     	;# 
   159  0691                     	;# 
   160  0692                     	;# 
   161  0693                     	;# 
   162  0694                     	;# 
   163  0695                     	;# 
   164  0F0F                     	;# 
   165  0F10                     	;# 
   166  0F11                     	;# 
   167  0F12                     	;# 
   168  0F13                     	;# 
   169  0F14                     	;# 
   170  0F15                     	;# 
   171  0F16                     	;# 
   172  0F17                     	;# 
   173  0F18                     	;# 
   174  0F19                     	;# 
   175  0F1A                     	;# 
   176  0F1B                     	;# 
   177  0F1C                     	;# 
   178  0F1D                     	;# 
   179  0F1E                     	;# 
   180  0F1F                     	;# 
   181  0FE3                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  001C                     _T2CONbits	set	28
   194  001B                     _PR2	set	27
   195  0099                     _OSCCONbits	set	153
   196  009E                     _ADCON1bits	set	158
   197  009D                     _ADCON0bits	set	157
   198  008E                     _TRISCbits	set	142
   199  009B                     _ADRES	set	155
   200  018E                     _ANSELCbits	set	398
   201  018E                     _ANSELC	set	398
   202  018C                     _ANSELA	set	396
   203  0613                     _PWM1CONbits	set	1555
   204  0612                     _PWM1DCH	set	1554
   205  0611                     _PWM1DCL	set	1553
   206                           
   207                           ; #config settings
   208  0000                     
   209                           	psect	cinit
   210  07FC                     start_initialization:	
   211  07FC                     __initialization:	
   212                           
   213                           ; Clear objects allocated to BANK0
   214  07FC  01A7               	clrf	__pbssBANK0& (0+127)
   215  07FD  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   216  07FE                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219  07FE                     __end_of__initialization:	
   220  07FE  0020               	movlb	0
   221  07FF  2F2B               	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	bssBANK0
   224  0027                     __pbssBANK0:	
   225  0027                     _res:	
   226  0027                     	ds	2
   227                           
   228                           	psect	cstackCOMMON
   229  0070                     __pcstackCOMMON:	
   230  0070                     ?_changeDC1:	
   231  0070                     ?_initPWM1:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_main:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?___wmul:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ___wmul@multiplier:	
   241                           ; 2 bytes @ 0x0
   242                           
   243                           
   244                           ; 2 bytes @ 0x0
   245  0070                     	ds	2
   246  0072                     ___wmul@multiplicand:	
   247                           
   248                           ; 2 bytes @ 0x2
   249  0072                     	ds	2
   250  0074                     ??___wmul:	
   251  0074                     ___wmul@product:	
   252                           ; 1 bytes @ 0x4
   253                           
   254                           
   255                           ; 2 bytes @ 0x4
   256  0074                     	ds	2
   257  0076                     ?___awdiv:	
   258  0076                     ___awdiv@divisor:	
   259                           ; 2 bytes @ 0x6
   260                           
   261                           
   262                           ; 2 bytes @ 0x6
   263  0076                     	ds	2
   264  0078                     ___awdiv@dividend:	
   265                           
   266                           ; 2 bytes @ 0x8
   267  0078                     	ds	2
   268  007A                     ??___awdiv:	
   269                           
   270                           ; 1 bytes @ 0xA
   271  007A                     	ds	1
   272  007B                     ??_changeDC1:	
   273                           
   274                           ; 1 bytes @ 0xB
   275  007B                     	ds	2
   276  007D                     ??_initPWM1:	
   277  007D                     ??_main:	
   278                           ; 1 bytes @ 0xD
   279                           
   280                           
   281                           ; 1 bytes @ 0xD
   282  007D                     	ds	1
   283                           
   284                           	psect	cstackBANK0
   285  0020                     __pcstackBANK0:	
   286  0020                     ___awdiv@counter:	
   287                           
   288                           ; 1 bytes @ 0x0
   289  0020                     	ds	1
   290  0021                     ___awdiv@sign:	
   291                           
   292                           ; 1 bytes @ 0x1
   293  0021                     	ds	1
   294  0022                     ___awdiv@quotient:	
   295                           
   296                           ; 2 bytes @ 0x2
   297  0022                     	ds	2
   298  0024                     changeDC1@val:	
   299                           
   300                           ; 1 bytes @ 0x4
   301  0024                     	ds	1
   302  0025                     changeDC1@temp:	
   303                           
   304                           ; 2 bytes @ 0x5
   305  0025                     	ds	2
   306                           
   307                           	psect	maintext
   308  072B                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 48 in file "06_PWM_main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B1F/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1
   328 ;;      Params:         0       0       0
   329 ;;      Locals:         0       0       0
   330 ;;      Temps:          1       0       0
   331 ;;      Totals:         1       0       0
   332 ;;Total ram usage:        1 bytes
   333 ;; Hardware stack levels required when called:    3
   334 ;; This function calls:
   335 ;;		___wmul
   336 ;;		_changeDC1
   337 ;;		_initPWM1
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _main
   345  072B                     _main:	
   346                           
   347                           ;06_PWM_main.c: 49: initPWM1();
   348                           
   349                           ;incstack = 0
   350                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   351  072B  2747               	fcall	_initPWM1
   352  072C                     l632:	
   353                           ;06_PWM_main.c: 50: while(1){
   354                           
   355                           
   356                           ;06_PWM_main.c: 51: ADCON0bits.GO = 1;
   357  072C  0021               	movlb	1	; select bank1
   358  072D  149D               	bsf	29,1	;volatile
   359                           
   360                           ;06_PWM_main.c: 52: _delay((unsigned long)((100)*(2000000/4000.0)));
   361  072E  3041               	movlw	65
   362  072F  00FD               	movwf	??_main
   363  0730  30EE               	movlw	238
   364  0731                     u317:	
   365  0731  0B89               	decfsz	9,f
   366  0732  2F31               	goto	u317
   367  0733  0BFD               	decfsz	??_main,f
   368  0734  2F31               	goto	u317
   369  0735  3200               	nop2
   370                           
   371                           ;06_PWM_main.c: 53: res = ADRES * (100/1023);
   372  0736  0021               	movlb	1	; select bank1
   373  0737  081C               	movf	28,w	;volatile
   374  0738  00F1               	movwf	___wmul@multiplier+1
   375  0739  081B               	movf	27,w	;volatile
   376  073A  00F0               	movwf	___wmul@multiplier
   377  073B  3000               	movlw	0
   378  073C  00F2               	movwf	___wmul@multiplicand
   379  073D  00F3               	movwf	___wmul@multiplicand+1
   380  073E  2710               	fcall	___wmul
   381  073F  0871               	movf	?___wmul+1,w
   382  0740  0020               	movlb	0	; select bank0
   383  0741  00A8               	movwf	_res+1
   384  0742  0870               	movf	?___wmul,w
   385  0743  00A7               	movwf	_res
   386                           
   387                           ;06_PWM_main.c: 54: changeDC1(res);
   388  0744  0827               	movf	_res,w
   389  0745  276E               	fcall	_changeDC1
   390  0746  2F2C               	goto	l632
   391  0747                     __end_of_main:	
   392                           ;06_PWM_main.c: 55: }
   393                           ;06_PWM_main.c: 57: return;
   394                           
   395                           
   396                           	psect	text1
   397  0747                     __ptext1:	
   398 ;; *************** function _initPWM1 *****************
   399 ;; Defined at:
   400 ;;		line 22 in file "06_PWM_main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1
   414 ;;      Params:         0       0       0
   415 ;;      Locals:         0       0       0
   416 ;;      Temps:          0       0       0
   417 ;;      Totals:         0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; Hardware stack levels required when called:    2
   421 ;; This function calls:
   422 ;;		_changeDC1
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _initPWM1
   430  0747                     _initPWM1:	
   431                           
   432                           ;06_PWM_main.c: 23: ANSELA = 0;
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _initPWM1: [wreg+status,2+status,0+pclath+cstack]
   436  0747  0023               	movlb	3	; select bank3
   437  0748  018C               	clrf	12	;volatile
   438                           
   439                           ;06_PWM_main.c: 24: ANSELC = 0;
   440  0749  018E               	clrf	14	;volatile
   441                           
   442                           ;06_PWM_main.c: 25: ANSELCbits.ANSC1 = 1;
   443  074A  148E               	bsf	14,1	;volatile
   444                           
   445                           ;06_PWM_main.c: 26: TRISCbits.TRISC1 = 1;
   446  074B  0021               	movlb	1	; select bank1
   447  074C  148E               	bsf	14,1	;volatile
   448                           
   449                           ;06_PWM_main.c: 28: ADCON0bits.CHS = 5;
   450  074D  081D               	movf	29,w	;volatile
   451  074E  3983               	andlw	-125
   452  074F  3814               	iorlw	20
   453  0750  009D               	movwf	29	;volatile
   454                           
   455                           ;06_PWM_main.c: 29: ADCON1bits.ADFM = 1;
   456  0751  179E               	bsf	30,7	;volatile
   457                           
   458                           ;06_PWM_main.c: 30: ADCON1bits.ADPREF = 0b00;
   459  0752  30FC               	movlw	-4
   460  0753  059E               	andwf	30,f	;volatile
   461                           
   462                           ;06_PWM_main.c: 31: ADCON1bits.ADCS = 0b011;
   463  0754  081E               	movf	30,w	;volatile
   464  0755  398F               	andlw	-113
   465  0756  3830               	iorlw	48
   466  0757  009E               	movwf	30	;volatile
   467                           
   468                           ;06_PWM_main.c: 32: ADCON0bits.ADON = 1;
   469  0758  141D               	bsf	29,0	;volatile
   470                           
   471                           ;06_PWM_main.c: 34: OSCCONbits.IRCF = 0b1100;
   472  0759  0819               	movf	25,w	;volatile
   473  075A  3987               	andlw	-121
   474  075B  3860               	iorlw	96
   475  075C  0099               	movwf	25	;volatile
   476                           
   477                           ;06_PWM_main.c: 36: TRISCbits.TRISC5 = 0;
   478  075D  128E               	bcf	14,5	;volatile
   479                           
   480                           ;06_PWM_main.c: 38: PWM1CONbits.PWM1EN = 1;
   481  075E  002C               	movlb	12	; select bank12
   482  075F  1793               	bsf	19,7	;volatile
   483                           
   484                           ;06_PWM_main.c: 39: PWM1CONbits.PWM1OE = 1;
   485  0760  1713               	bsf	19,6	;volatile
   486                           
   487                           ;06_PWM_main.c: 40: PWM1CONbits.PWM1POL = 0;
   488  0761  1213               	bcf	19,4	;volatile
   489                           
   490                           ;06_PWM_main.c: 42: PR2 = 31;
   491  0762  301F               	movlw	31
   492  0763  0020               	movlb	0	; select bank0
   493  0764  009B               	movwf	27	;volatile
   494                           
   495                           ;06_PWM_main.c: 43: changeDC1(0);
   496  0765  3000               	movlw	0
   497  0766  276E               	fcall	_changeDC1
   498                           
   499                           ;06_PWM_main.c: 44: T2CONbits.T2CKPS = 0b10;
   500  0767  0020               	movlb	0	; select bank0
   501  0768  081C               	movf	28,w	;volatile
   502  0769  39FC               	andlw	-4
   503  076A  3802               	iorlw	2
   504  076B  009C               	movwf	28	;volatile
   505                           
   506                           ;06_PWM_main.c: 45: T2CONbits.TMR2ON = 1;
   507  076C  151C               	bsf	28,2	;volatile
   508  076D  0008               	return
   509  076E                     __end_of_initPWM1:	
   510                           
   511                           	psect	text2
   512  076E                     __ptext2:	
   513 ;; *************** function _changeDC1 *****************
   514 ;; Defined at:
   515 ;;		line 16 in file "06_PWM_main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  val             1    wreg     unsigned char 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  val             1    4[BANK0 ] unsigned char 
   520 ;;  temp            2    5[BANK0 ] int 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1
   530 ;;      Params:         0       0       0
   531 ;;      Locals:         0       3       0
   532 ;;      Temps:          2       0       0
   533 ;;      Totals:         2       3       0
   534 ;;Total ram usage:        5 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    1
   537 ;; This function calls:
   538 ;;		___awdiv
   539 ;;		___wmul
   540 ;; This function is called by:
   541 ;;		_initPWM1
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _changeDC1
   548  076E                     _changeDC1:	
   549                           
   550                           ;incstack = 0
   551                           ; Regs used in _changeDC1: [wreg+status,2+status,0+pclath+cstack]
   552                           ;changeDC1@val stored from wreg
   553  076E  0020               	movlb	0	; select bank0
   554  076F  00A4               	movwf	changeDC1@val
   555                           
   556                           ;06_PWM_main.c: 17: int temp = (val*4*(PR2+1))/100;
   557  0770  3064               	movlw	100
   558  0771  00F6               	movwf	___awdiv@divisor
   559  0772  3000               	movlw	0
   560  0773  00F7               	movwf	___awdiv@divisor+1
   561  0774  081B               	movf	27,w	;volatile
   562  0775  3E01               	addlw	1
   563  0776  00F0               	movwf	___wmul@multiplier
   564  0777  3000               	movlw	0
   565  0778  1803               	skipnc
   566  0779  3001               	movlw	1
   567  077A  00F1               	movwf	___wmul@multiplier+1
   568  077B  0824               	movf	changeDC1@val,w
   569  077C  00FB               	movwf	??_changeDC1
   570  077D  01FC               	clrf	??_changeDC1+1
   571  077E  35FB               	lslf	??_changeDC1,f
   572  077F  0DFC               	rlf	??_changeDC1+1,f
   573  0780  35FB               	lslf	??_changeDC1,f
   574  0781  0DFC               	rlf	??_changeDC1+1,f
   575  0782  087B               	movf	??_changeDC1,w
   576  0783  00F2               	movwf	___wmul@multiplicand
   577  0784  087C               	movf	??_changeDC1+1,w
   578  0785  00F3               	movwf	___wmul@multiplicand+1
   579  0786  2710               	fcall	___wmul
   580  0787  0871               	movf	?___wmul+1,w
   581  0788  00F9               	movwf	___awdiv@dividend+1
   582  0789  0870               	movf	?___wmul,w
   583  078A  00F8               	movwf	___awdiv@dividend
   584  078B  27AA               	fcall	___awdiv
   585  078C  0877               	movf	?___awdiv+1,w
   586  078D  0020               	movlb	0	; select bank0
   587  078E  00A6               	movwf	changeDC1@temp+1
   588  078F  0876               	movf	?___awdiv,w
   589  0790  00A5               	movwf	changeDC1@temp
   590                           
   591                           ;06_PWM_main.c: 18: PWM1DCL = temp << 6;
   592  0791  0825               	movf	changeDC1@temp,w
   593  0792  00FB               	movwf	??_changeDC1
   594  0793  3005               	movlw	5
   595  0794                     u305:	
   596  0794  35FB               	lslf	??_changeDC1,f
   597  0795  3EFF               	addlw	-1
   598  0796  1D03               	skipz
   599  0797  2F94               	goto	u305
   600  0798  357B               	lslf	??_changeDC1,w
   601  0799  002C               	movlb	12	; select bank12
   602  079A  0091               	movwf	17	;volatile
   603                           
   604                           ;06_PWM_main.c: 19: PWM1DCH = temp >> 2;
   605  079B  0020               	movlb	0	; select bank0
   606  079C  0826               	movf	changeDC1@temp+1,w
   607  079D  00FC               	movwf	??_changeDC1+1
   608  079E  0825               	movf	changeDC1@temp,w
   609  079F  00FB               	movwf	??_changeDC1
   610  07A0  0D7C               	rlf	??_changeDC1+1,w
   611  07A1  0CFC               	rrf	??_changeDC1+1,f
   612  07A2  0CFB               	rrf	??_changeDC1,f
   613  07A3  0D7C               	rlf	??_changeDC1+1,w
   614  07A4  0CFC               	rrf	??_changeDC1+1,f
   615  07A5  0CFB               	rrf	??_changeDC1,f
   616  07A6  087B               	movf	??_changeDC1,w
   617  07A7  002C               	movlb	12	; select bank12
   618  07A8  0092               	movwf	18	;volatile
   619  07A9  0008               	return
   620  07AA                     __end_of_changeDC1:	
   621                           
   622                           	psect	text3
   623  0710                     __ptext3:	
   624 ;; *************** function ___wmul *****************
   625 ;; Defined at:
   626 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  multiplier      2    0[COMMON] unsigned int 
   629 ;;  multiplicand    2    2[COMMON] unsigned int 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  product         2    4[COMMON] unsigned int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  2    0[COMMON] unsigned int 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1
   641 ;;      Params:         4       0       0
   642 ;;      Locals:         2       0       0
   643 ;;      Temps:          0       0       0
   644 ;;      Totals:         6       0       0
   645 ;;Total ram usage:        6 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_changeDC1
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function ___wmul
   657  0710                     ___wmul:	
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   661  0710  01F4               	clrf	___wmul@product
   662  0711  01F5               	clrf	___wmul@product+1
   663  0712                     l534:	
   664  0712  1C70               	btfss	___wmul@multiplier,0
   665  0713  2F18               	goto	l48
   666  0714  0872               	movf	___wmul@multiplicand,w
   667  0715  07F4               	addwf	___wmul@product,f
   668  0716  0873               	movf	___wmul@multiplicand+1,w
   669  0717  3DF5               	addwfc	___wmul@product+1,f
   670  0718                     l48:	
   671  0718  3001               	movlw	1
   672  0719                     u175:	
   673  0719  35F2               	lslf	___wmul@multiplicand,f
   674  071A  0DF3               	rlf	___wmul@multiplicand+1,f
   675  071B  0B89               	decfsz	9,f
   676  071C  2F19               	goto	u175
   677  071D  3001               	movlw	1
   678  071E                     u185:	
   679  071E  36F1               	lsrf	___wmul@multiplier+1,f
   680  071F  0CF0               	rrf	___wmul@multiplier,f
   681  0720  0B89               	decfsz	9,f
   682  0721  2F1E               	goto	u185
   683  0722  0870               	movf	___wmul@multiplier,w
   684  0723  0471               	iorwf	___wmul@multiplier+1,w
   685  0724  1D03               	btfss	3,2
   686  0725  2F12               	goto	l534
   687  0726  0875               	movf	___wmul@product+1,w
   688  0727  00F1               	movwf	?___wmul+1
   689  0728  0874               	movf	___wmul@product,w
   690  0729  00F0               	movwf	?___wmul
   691  072A  0008               	return
   692  072B                     __end_of___wmul:	
   693                           
   694                           	psect	text4
   695  07AA                     __ptext4:	
   696 ;; *************** function ___awdiv *****************
   697 ;; Defined at:
   698 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  divisor         2    6[COMMON] int 
   701 ;;  dividend        2    8[COMMON] int 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  quotient        2    2[BANK0 ] int 
   704 ;;  sign            1    1[BANK0 ] unsigned char 
   705 ;;  counter         1    0[BANK0 ] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  2    6[COMMON] int 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1
   715 ;;      Params:         4       0       0
   716 ;;      Locals:         0       4       0
   717 ;;      Temps:          1       0       0
   718 ;;      Totals:         5       4       0
   719 ;;Total ram usage:        9 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_changeDC1
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function ___awdiv
   730  07AA                     ___awdiv:	
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   734  07AA  0020               	movlb	0	; select bank0
   735  07AB  01A1               	clrf	___awdiv@sign
   736  07AC  1FF7               	btfss	___awdiv@divisor+1,7
   737  07AD  2FB5               	goto	l554
   738  07AE  09F6               	comf	___awdiv@divisor,f
   739  07AF  09F7               	comf	___awdiv@divisor+1,f
   740  07B0  0AF6               	incf	___awdiv@divisor,f
   741  07B1  1903               	skipnz
   742  07B2  0AF7               	incf	___awdiv@divisor+1,f
   743  07B3  01A1               	clrf	___awdiv@sign
   744  07B4  0AA1               	incf	___awdiv@sign,f
   745  07B5                     l554:	
   746  07B5  1FF9               	btfss	___awdiv@dividend+1,7
   747  07B6  2FC0               	goto	l560
   748  07B7  09F8               	comf	___awdiv@dividend,f
   749  07B8  09F9               	comf	___awdiv@dividend+1,f
   750  07B9  0AF8               	incf	___awdiv@dividend,f
   751  07BA  1903               	skipnz
   752  07BB  0AF9               	incf	___awdiv@dividend+1,f
   753  07BC  3001               	movlw	1
   754  07BD  00FA               	movwf	??___awdiv
   755  07BE  087A               	movf	??___awdiv,w
   756  07BF  06A1               	xorwf	___awdiv@sign,f
   757  07C0                     l560:	
   758  07C0  01A2               	clrf	___awdiv@quotient
   759  07C1  01A3               	clrf	___awdiv@quotient+1
   760  07C2  0876               	movf	___awdiv@divisor,w
   761  07C3  0477               	iorwf	___awdiv@divisor+1,w
   762  07C4  1903               	btfsc	3,2
   763  07C5  2FEF               	goto	l582
   764  07C6  01A0               	clrf	___awdiv@counter
   765  07C7  0AA0               	incf	___awdiv@counter,f
   766  07C8                     l570:	
   767  07C8  1BF7               	btfsc	___awdiv@divisor+1,7
   768  07C9  2FD4               	goto	l572
   769  07CA  3001               	movlw	1
   770  07CB                     u235:	
   771  07CB  35F6               	lslf	___awdiv@divisor,f
   772  07CC  0DF7               	rlf	___awdiv@divisor+1,f
   773  07CD  0B89               	decfsz	9,f
   774  07CE  2FCB               	goto	u235
   775  07CF  3001               	movlw	1
   776  07D0  00FA               	movwf	??___awdiv
   777  07D1  087A               	movf	??___awdiv,w
   778  07D2  07A0               	addwf	___awdiv@counter,f
   779  07D3  2FC8               	goto	l570
   780  07D4                     l572:	
   781  07D4  3001               	movlw	1
   782  07D5                     u255:	
   783  07D5  35A2               	lslf	___awdiv@quotient,f
   784  07D6  0DA3               	rlf	___awdiv@quotient+1,f
   785  07D7  0B89               	decfsz	9,f
   786  07D8  2FD5               	goto	u255
   787  07D9  0877               	movf	___awdiv@divisor+1,w
   788  07DA  0279               	subwf	___awdiv@dividend+1,w
   789  07DB  1D03               	skipz
   790  07DC  2FDF               	goto	u265
   791  07DD  0876               	movf	___awdiv@divisor,w
   792  07DE  0278               	subwf	___awdiv@dividend,w
   793  07DF                     u265:	
   794  07DF  1C03               	skipc
   795  07E0  2FE6               	goto	l578
   796  07E1  0876               	movf	___awdiv@divisor,w
   797  07E2  02F8               	subwf	___awdiv@dividend,f
   798  07E3  0877               	movf	___awdiv@divisor+1,w
   799  07E4  3BF9               	subwfb	___awdiv@dividend+1,f
   800  07E5  1422               	bsf	___awdiv@quotient,0
   801  07E6                     l578:	
   802  07E6  3001               	movlw	1
   803  07E7                     u275:	
   804  07E7  36F7               	lsrf	___awdiv@divisor+1,f
   805  07E8  0CF6               	rrf	___awdiv@divisor,f
   806  07E9  0B89               	decfsz	9,f
   807  07EA  2FE7               	goto	u275
   808  07EB  3001               	movlw	1
   809  07EC  02A0               	subwf	___awdiv@counter,f
   810  07ED  1D03               	btfss	3,2
   811  07EE  2FD4               	goto	l572
   812  07EF                     l582:	
   813  07EF  0821               	movf	___awdiv@sign,w
   814  07F0  1903               	btfsc	3,2
   815  07F1  2FF7               	goto	l586
   816  07F2  09A2               	comf	___awdiv@quotient,f
   817  07F3  09A3               	comf	___awdiv@quotient+1,f
   818  07F4  0AA2               	incf	___awdiv@quotient,f
   819  07F5  1903               	skipnz
   820  07F6  0AA3               	incf	___awdiv@quotient+1,f
   821  07F7                     l586:	
   822  07F7  0823               	movf	___awdiv@quotient+1,w
   823  07F8  00F7               	movwf	?___awdiv+1
   824  07F9  0822               	movf	___awdiv@quotient,w
   825  07FA  00F6               	movwf	?___awdiv
   826  07FB  0008               	return
   827  07FC                     __end_of___awdiv:	
   828  007E                     btemp	set	126	;btemp
   829  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7       9
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_changeDC1
    _initPWM1->_changeDC1
    _changeDC1->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_changeDC1
    _initPWM1->_changeDC1
    _changeDC1->___awdiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1858
                                             13 COMMON     1     1      0
                             ___wmul
                          _changeDC1
                           _initPWM1
 ---------------------------------------------------------------------------------
 (1) _initPWM1                                             0     0      0     777
                          _changeDC1
 ---------------------------------------------------------------------------------
 (2) _changeDC1                                            5     5      0     777
                                             11 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _changeDC1
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _initPWM1
     _changeDC1
       ___awdiv
         ___wmul (ARG)
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      17       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Feb 26 13:13:16 2018

            __CFG_CP$OFF 0000                       l48 0718             ___awdiv@sign 0021  
    ___wmul@multiplicand 0072                      l534 0712                      l560 07C0  
                    l632 072C                      l570 07C8                      l554 07B5  
                    l572 07D4                      l582 07EF                      l586 07F7  
                    l578 07E6                      u305 0794                      u235 07CB  
                    u317 0731                      _PR2 001B                      u255 07D5  
                    u175 0719                      u265 07DF                      u185 071E  
                    u275 07E7                      _res 0027             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
                   _main 072B                     btemp 007E                     start 0001  
                  ?_main 0070          __end_of___awdiv 07FC                    _ADRES 009B  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0076          ___awdiv@counter 0020  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 07FC             __end_of_main 0747  
         __CFG_LPBOR$OFF 0000                   ??_main 007D         ___awdiv@dividend 0078  
                 _ANSELA 018C                   _ANSELC 018E            changeDC1@temp 0025  
         __CFG_PWRTE$OFF 0000                   ___wmul 0710                ??___awdiv 007A  
       __end_of_initPWM1 076E         ___awdiv@quotient 0022  __end_of__initialization 07FE  
         __pcstackCOMMON 0070       __size_of_changeDC1 003C               __pbssBANK0 0027  
             __pmaintext 072B                  ?___wmul 0070                  _PWM1DCH 0612  
                _PWM1DCL 0611        __end_of_changeDC1 07AA                ?_initPWM1 0070  
                ___awdiv 07AA          __size_of___wmul 001B          __CFG_STVREN$OFF 0000  
                __ptext1 0747                  __ptext2 076E                  __ptext3 0710  
                __ptext4 07AA                _T2CONbits 001C     end_of_initialization 07FE  
             ??_initPWM1 007D         __CFG_FOSC$INTOSC 0000                _TRISCbits 008E  
         __end_of___wmul 072B      start_initialization 07FC             changeDC1@val 0024  
               ??___wmul 0074                ___latbits 0000            __pcstackBANK0 0020  
              _changeDC1 076E        __size_of_initPWM1 0027                 ?___awdiv 0076  
         ___wmul@product 0074               ?_changeDC1 0070               _ADCON0bits 009D  
             _ADCON1bits 009E        ___wmul@multiplier 0070         __size_of___awdiv 0052  
             _ANSELCbits 018E                 _initPWM1 0747              ??_changeDC1 007B  
          __size_of_main 001C              _PWM1CONbits 0613        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099  
